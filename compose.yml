services:
  db:
    container_name: db
    image: postgres
    restart: always
    user: postgres
    volumes:
      - teamup_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    working_dir: /app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:alpine
    container_name: redis-prod
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - teamup_redis_data:/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 1s
      timeout: 1s
      retries: 30
    command:
      - redis-server
      - --requirepass
      - ${REDIS_PASSWORD}
      - --appendonly
      - "yes"
      - --save
      - "60"
      - "1"
      - --maxmemory
      - "1024mb"
      - --maxmemory-policy
      - "allkeys-lru"

  celery_worker:
    container_name: celery-worker
    build:
      context: ./backend
    restart: always
    env_file:
      - .env
    working_dir: /app
    depends_on:
      - db
      - redis
    command: celery -A src.tasks.celery_app worker --loglevel=info


volumes:
  teamup_db_data:
  teamup_redis_data:
